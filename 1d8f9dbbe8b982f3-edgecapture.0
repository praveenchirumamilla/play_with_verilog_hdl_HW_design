module top_module (
    input clk,
    input reset,
    input [31:0] in,
    output [31:0] out
);
    reg [31:0] prev_in;
    
    always @(posedge clk) begin
        if(reset) begin
            out <= 32'b0;
        end else begin
            for(int i = 0; i < $bits(in); i = i+1) begin
                out[i] <=  prev_in[i] & (~in[i]) ? 1'b1 : out[i];
            end
        end
    end
    
    // Seq logic
    always @(posedge clk) begin
            prev_in <= in;
    end
endmodule
