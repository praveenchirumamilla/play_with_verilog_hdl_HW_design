module top_module (
    input clk,
    input reset,
    input [31:0] in,
    output [31:0] out
);
    reg [31:0] prev_in;
    wire [31:0] out_next;
    
    //assign out_next = prev_in & (~in) ? in : out_next;
    
    // Seq logic
    always @(posedge clk) begin
        if(reset) begin
            out <= 32'b0;
        end else begin
            prev_in <= in;
            out <= prev_in & (~in) ? in : out;
        end
    end
endmodule
