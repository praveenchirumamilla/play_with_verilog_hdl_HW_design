module top_module(
    input clk,
    input in,
    input reset,
    output out); //

    // State transition logic

    // State flip-flops with synchronous reset

    // Output logic
    
        // State transition logic
    parameter A = 0, B = 1, C = 2, D = 3;
    reg [1:0] state, next_state;
    
    // State flip-flops with synchronous reset
    always @(posedge clk) begin
        if(reset) begin
           state <= A; 
        end else begin
           state <= next_state; 
        end
    end
    
    // Combo logic state transition
    always @(*) begin
        case(state)
            A : next_state = in ? B : state;
            B : next_state = in ? state : C;
            C : next_state = in ? D : A;
            D : next_state = in ? B : C;
        endcase
    end

    // Output logic
    assign out = (state == D);

endmodule
