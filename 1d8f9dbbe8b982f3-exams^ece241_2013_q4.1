module top_module (
    input clk,
    input reset,
    input [3:1] s,
    output fr3,
    output fr2,
    output fr1,
    output dfr
); 
    reg [3:1] prev_s;
    
    always @(posedge clk) begin
        if(reset) begin
           fr3 <= 1'b1; 
           fr2 <= 1'b1; 
           fr1 <= 1'b1; 
           dfr <= 1'b1; 
        end else begin
            prev_s <= s;
            case(s) 
                3'h7 : begin 
                        fr3 <= 1'b0; 
           				fr2 <= 1'b0; 
           				fr1 <= 1'b0; 
           				dfr <= 1'b0;
                end
                3'h3 : begin
                        fr3 <= 1'b0; 
           				fr2 <= 1'b0; 
           				fr1 <= 1'b1; 
                    dfr <= (prev_s >= s) ? 1'b1: 1'b0;
                end
                3'h1 : begin
                        fr3 <= 1'b0; 
           				fr2 <= 1'b1; 
           				fr1 <= 1'b1; 
                    dfr <= (prev_s >= s) ? 1'b1: 1'b0;
                end
                3'h0 : begin
                        fr3 <= 1'b1; 
           				fr2 <= 1'b1; 
           				fr1 <= 1'b1; 
           				dfr <= 1'b1;
                end
            endcase
        end
    end

endmodule
