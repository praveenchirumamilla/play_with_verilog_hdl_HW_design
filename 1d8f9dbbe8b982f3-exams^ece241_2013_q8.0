module top_module (
    input clk,
    input aresetn,    // Asynchronous active-low reset
    input x,
    output z ); 
    
    localparam none = 0, s1 = 1, s10 = 2;
    reg [1:0] state, next_state;
    
    // Continuous assignments
    assign z = (state == s10) & x;
    
    // Combo transitions
    always @(*) begin
        case(state) 
            none : next_state = x ? s1 : state;
            s1   : next_state = x ? state : s10;
            s10  : next_state = x ? s1 : none;
            default : next_state = none;
        endcase
    end
    
    // seq logic
    always @(posedge clk, negedge aresetn) begin
        if(~aresetn) begin
           state <= none; 
        end else begin
           state <= next_state; 
        end
    end

endmodule
