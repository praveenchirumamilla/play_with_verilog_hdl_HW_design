module top_module (
    input clk,
    input enable,
    input S,
    input A, B, C,
    output Z ); 
    
    reg [7:0] shift_reg;
    
    //shift in logic
    always @(posedge clk) begin
        if(enable) begin
            shift_reg <= {shift_reg[6:0], S};
      /*  end else begin
            case({A,B,C})
                3'h0 : Z <= shift_reg[0];
                3'h1 : Z <= shift_reg[1];
                3'h2 : Z <= shift_reg[2];
                3'h3 : Z <= shift_reg[3];
                3'h4 : Z <= shift_reg[4];
                3'h5 : Z <= shift_reg[5];
                3'h6 : Z <= shift_reg[6];
                3'h7 : Z <= shift_reg[7];
            endcase */
        end     
    end
    
    always @(posedge clk) begin
      case({A,B,C})
        3'h0 : Z <= shift_reg[0];
         3'h1 : Z <= shift_reg[1];
                3'h2 : Z <= shift_reg[2];
                3'h3 : Z <= shift_reg[3];
                3'h4 : Z <= shift_reg[4];
                3'h5 : Z <= shift_reg[5];
                3'h6 : Z <= shift_reg[6];
                3'h7 : Z <= shift_reg[7];
            endcase         
    end

endmodule
